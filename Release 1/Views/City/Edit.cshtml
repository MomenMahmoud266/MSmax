@model Release_1.Models.CityViewModel
    ViewBag.Title = "Edit";
}

<h2>Edit</h2>

@using (Html.BeginForm())
{
    @Html.HiddenFor(c => c.city.city_id)

    @Html.AntiForgeryToken()

    <div class="form-horizontal">
        <h4>city_bd</h4>
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        <div class="form-group">
            @Html.LabelFor(model => model.city.city_name, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.city.city_name, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.city.city_name, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.city.city_code, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.city.city_code, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.city.city_code, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.city.city_state, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.DropDownListFor(model => model.city.city_state, new List<SelectListItem>
                           {
                               new SelectListItem {Text = "Active", Value = "1"},
                               new SelectListItem {Text = "InActive", Value = "0"}
                           }
                               , new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.city.city_state, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.city.city_country_id, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.DropDownListFor(model => model.city.city_country_id, new SelectList(Model.active_countries, "country_id", "country_name")
                               , new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.city.city_country_id, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.city.city_desc, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.city.city_desc, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.city.city_desc, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.city.city_general_conditions, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.city.city_general_conditions, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.city.city_general_conditions, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.city.is_pickup, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.DropDownListFor(model => model.city.is_pickup, new List<SelectListItem>
                           {
                               new SelectListItem {Text = "yes", Value = "1"},
                               new SelectListItem {Text = "No", Value = "0"}
                           }
                               , new { htmlAttributes = new { @class = "form-control" } })                @Html.ValidationMessageFor(model => model.city.is_pickup, "", new { @class = "text-danger" })
                        </div>
                    </div>

                    <div class="form-group">
                        @Html.LabelFor(model => model.city.is_delivery, htmlAttributes: new { @class = "control-label col-md-2" })
                        <div class="col-md-10">
                            @Html.DropDownListFor(model => model.city.is_delivery, new List<SelectListItem>
                                       {
                                           new SelectListItem {Text = "Yes", Value = "1"},
                                           new SelectListItem {Text = "No", Value = "0"}
                                       }
                                           , new { htmlAttributes = new { @class = "form-control" } })                @Html.ValidationMessageFor(model => model.city.is_delivery, "", new { @class = "text-danger" })
                                    </div>
                                </div>

                                <div class="form-group">
                                    <div class="col-md-offset-2 col-md-10">
                                        <input type="submit" value="Create" class="btn btn-default" />
                                    </div>
                                </div>
                            </div>
                        }

                        <div>
                            @Html.ActionLink("Back to List", "Index")
                        </div>
